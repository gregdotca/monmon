##############################################################################
# COMMON
##############################################################################

- name: 'Add signing keys by id from keyserver.ubuntu.com'
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: '{{ item }}'
  with_items:
    - '04EE7237B7D453EC' # Debian Buster backports, for Monit
    - '648ACFD622F3D138' # Debian Buster backports, for Monit
    - '6ED0E7B82643E131' # ?

- name: 'Update repos'
  apt:
    update_cache: yes
    force_apt_get: true
    cache_valid_time: 3600

- name: 'Upgrade packages'
  apt:
    upgrade: dist
    force_apt_get: yes

- name: 'Install software packages via apt (common)'
  apt:
    name: ['curl', 'git', 'nginx', 'php-curl', 'php-fpm', 'php-xml', 'python3-numpy', 'python3-pil', 'python3-pip', 'ttf-wqy-zenhei']
    force_apt_get: 'yes'

- name: 'Install software packages via apt (cli)'
  apt:
    name: ['lynx']
    force_apt_get: 'yes'
  when: installation_type == 'cli'

- name: 'Install software packages via apt (gui)'
  apt:
    name: ['xserver-xorg', 'raspberrypi-ui-mods', 'lightdm', 'midori']
    force_apt_get: 'yes'
  when: installation_type == 'gui'

- name: 'Install Python packages via pip'
  pip:
    name: ['RPi.GPIO', 'spidev', 'xmltodict']
    state: present

- name: 'Copy nginx config file'
  template:
    src: 'nginx.http.conf.j2'
    dest: '/etc/nginx/sites-available/default'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: restart nginx

- name: 'Enable SPI kernel support'
  command: '{{ item }}'
  with_items:
    - 'raspi-config nonint do_spi 0' # Enable SPI interface (for certain display hats)

##############################################################################
# CLI INSTALLATION METHOD
##############################################################################

- name: 'Enable CLI auto-login (cli)'
  command: '{{ item }}'
  with_items:
    - 'raspi-config nonint do_boot_behaviour B2' # Enable auto-login CLI
  when: installation_type == 'cli'

- name: "Update ~/.bashrc (cli)"
  lineinfile:
    path: '/home/pi/.bashrc'
    line: 'echo ""; echo "monmon will start once the Raspberry Pi is fully booted..."; echo ""; sleep 30; echo ""; {{ cli_initialization_command }}'
  when: installation_type == 'cli'

##############################################################################
# GUI INSTALLATION METHOD
##############################################################################

- name: "Create ~/.config/midori -- pi (gui)"
  file:
    path: '/home/pi/.config/midori'
    state: directory
    owner: 'pi'
    group: 'pi'
    mode: 0755
  when: installation_type == 'gui'

- name: 'Copy Midori config file to /home/greg/.config/midori/config (gui)'
  template:
    src: 'midori-config.j2'
    dest: '/home/pi/.config/midori/config'
    owner: 'pi'
    group: 'pi'
    mode: '0644'
  when: installation_type == 'gui'

- name: "Create /etc/xdg/lxsession/LXDE-pi/autostart -- pi (gui)"
  file:
    path: '{{ item }}'
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0755
  with_items:
    - '/etc/xdg'
    - '/etc/xdg/lxsession'
    - '/etc/xdg/lxsession/LXDE-pi'
  when: installation_type == 'gui'

- name: 'Copy Pixel GUI autostart file to /etc/xdg/lxsession/LXDE-pi/autostart (gui)'
  template:
    src: 'pixel-autostart.j2'
    dest: '/etc/xdg/lxsession/LXDE-pi/autostart'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: installation_type == 'gui'

- name: 'Set some raspi-config settings (gui)'
  command: '{{ item }}'
  with_items:
    - 'raspi-config nonint do_boot_behaviour B4' # Enable auto-login GUI
  when: installation_type == 'gui'

##############################################################################
# COMMON
##############################################################################

- name: "Create /var/www/html dir"
  file:
    path: '/var/www/html'
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0755

- name: 'Delete default index.html'
  file:
    path: '/var/www/html/index.html'
    state: absent

- name: 'Delete default 502.html'
  file:
    path: '/var/www/html/502.html'
    state: absent

- name: 'Delete default index.html'
  file:
    path: '/var/www/html/index.html'
    state: absent

- name: 'Delete default index.nginx-debian.html'
  file:
    path: '/var/www/html/index.nginx-debian.html'
    state: absent

- name: "Checkout the monmon git repo"
  git:
    repo: 'https://github.com/monmon-io/monmon.git'
    dest: '/var/www/html'
    umask: '022'
    force: yes

- name: 'Change ownership of all files in /var/www/html'
  file:
    path: '/var/www/html'
    state: directory
    recurse: yes
    owner: 'root'
    group: 'root'

- name: 'Check to see if the custom config file exists'
  stat:
    path: 'config.custom.j2'
    follow: yes
  delegate_to: localhost
  register: custom_config_file

- name: 'Copy custom config file to /var/www/html'
  template:
    src: 'config.custom.j2'
    dest: '/var/www/html/config.custom'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: custom_config_file.stat.exists

- name: "Copy default config.j2 config file to /var/www/html"
  template:
    src: 'config.j2'
    dest: '/var/www/html/config'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: not custom_config_file.stat.exists

- name: 'Check to see if the custom alert_off include file exists'
  stat:
    path: 'include.alert_off.custom.j2'
    follow: yes
  delegate_to: localhost
  register: custom_include_alert_off_file

- name: 'Copy custom include alert_off file to /var/www/html'
  template:
    src: 'include.alert_off.custom.j2'
    dest: '/var/www/html/include.alert_off'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: custom_include_alert_off_file.stat.exists

- name: 'Check to see if the custom alert_on include file exists'
  stat:
    path: 'include.alert_on.custom.j2'
    follow: yes
  delegate_to: localhost
  register: custom_include_alert_on_file

- name: 'Copy custom include alert_on file to /var/www/html'
  template:
    src: 'include.alert_on.custom.j2'
    dest: '/var/www/html/include.alert_on'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: custom_include_alert_on_file.stat.exists

- name: 'Check to see if the custom nodes file exists'
  stat:
    path: 'nodes.custom.j2'
    follow: yes
  delegate_to: localhost
  register: custom_nodes_file

- name: 'Copy custom nodes file to /var/www/html'
  template:
    src: 'nodes.custom.j2'
    dest: '/var/www/html/nodes.custom'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: custom_nodes_file.stat.exists

- name: "Copy default nodes.j2 config file to /var/www/html"
  template:
    src: 'nodes.j2'
    dest: '/var/www/html/nodes'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: not custom_nodes_file.stat.exists

- name: 'Install the BCM 2835 and WiringPi GPIO libraries'
  shell:
    cmd: '/var/www/html/library-install.sh'

- name: 'Copy check.py systemd service unit file to /etc/systemd/system'
  template:
    src: 'check.service.j2'
    dest: '/etc/systemd/system/check.service'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Copy check.py systemd timer unit file to /etc/systemd/system'
  template:
    src: 'check.timer.j2'
    dest: '/etc/systemd/system/check.timer'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Copy alert.py systemd service unit file to /etc/systemd/system'
  template:
    src: 'alert.service.j2'
    dest: '/etc/systemd/system/alert.service'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Copy alert.py systemd timer unit file to /etc/systemd/system'
  template:
    src: 'alert.timer.j2'
    dest: '/etc/systemd/system/alert.timer'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Reload systemd daemon'
  systemd:
    daemon_reload: yes

- name: 'Enable the check.py systemd timer'
  systemd:
    name: check.timer
    enabled: yes

- name: 'Enable the alert.py systemd timer'
  systemd:
    name: alert.timer
    enabled: yes

- name: 'Copy motd file'
  template:
    src: 'motd.j2'
    dest: '/etc/motd'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Set hostname'
  hostname:
    name: 'monmon'

- name: 'Add monmon to /etc/hosts'
  lineinfile:
    path: '/etc/hosts'
    line: '127.0.0.1    monmon'
